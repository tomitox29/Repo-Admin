<?php

namespace ContainerGqfUnWk;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPrestashop_Module_LinkBlock_FormTypeService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'prestashop.module.link_block.form_type' shared autowired service.
     *
     * @return \PrestaShop\Module\LinkList\Form\Type\LinkBlockType
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['prestashop.module.link_block.form_type'] = new \PrestaShop\Module\LinkList\Form\Type\LinkBlockType(($container->services['translator'] ?? self::getTranslatorService($container)), ($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container))->getLanguages(), ($container->services['prestashop.module.link_block.choice_provider.hook'] ?? $container->load('getPrestashop_Module_LinkBlock_ChoiceProvider_HookService'))->getChoices(), ($container->services['prestashop.module.link_block.choice_provider.cms_page'] ?? $container->load('getPrestashop_Module_LinkBlock_ChoiceProvider_CmsPageService'))->getChoices(), ($container->services['prestashop.module.link_block.choice_provider.product_page'] ?? $container->load('getPrestashop_Module_LinkBlock_ChoiceProvider_ProductPageService'))->getChoices(), ($container->services['prestashop.module.link_block.choice_provider.static_page'] ?? $container->load('getPrestashop_Module_LinkBlock_ChoiceProvider_StaticPageService'))->getChoices(), ($container->services['prestashop.module.link_block.choice_provider.category'] ?? $container->load('getPrestashop_Module_LinkBlock_ChoiceProvider_CategoryService'))->getChoices(), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Feature\\MultistoreFeature'] ?? self::getMultistoreFeatureService($container))->isUsed());
    }
}
