<?php

namespace ContainerGqfUnWk;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTwigService extends AdminKernelProdContainer
{
    /*
     * Gets the private 'twig' shared service.
     *
     * @return \Twig\Environment
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['twig'] = $instance = new \Twig\Environment(($container->privates['twig.loader.chain'] ?? $container->load('getTwig_Loader_ChainService')), ['autoescape' => 'name', 'debug' => false, 'strict_variables' => false, 'cache' => ($container->targetDir.''.'/twig'), 'charset' => 'UTF-8']);

        $a = ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack());
        $b = ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container));
        $c = ($container->services['translator'] ?? self::getTranslatorService($container));
        $d = ($container->services['prestashop.router'] ?? $container->load('getPrestashop_RouterService'));
        $e = ($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container));
        $f = new \Symfony\Bridge\Twig\AppVariable();
        $f->setEnvironment('prod');
        $f->setDebug(false);
        $f->setTokenStorage($b);
        if ($container->has('request_stack')) {
            $f->setRequestStack($a);
        }
        $f->setLocaleSwitcher(($container->privates['translation.locale_switcher'] ?? $container->load('getTranslation_LocaleSwitcherService')));
        $f->setEnabledLocales([]);

        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CsrfExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(($container->privates['security.logout_url_generator'] ?? self::getSecurity_LogoutUrlGeneratorService($container))));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(($container->privates['security.authorization_checker'] ?? self::getSecurity_AuthorizationCheckerService($container)), new \Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator($a, ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container)), $b)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($c));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', ($container->privates['assets._version__default'] ?? $container->load('getAssets_VersionDefaultService')), ($container->privates['assets.context'] ?? $container->load('getAssets_ContextService'))), new RewindableGenerator(function () use ($container) {
            yield 'front_js' => ($container->privates['assets._package_front_js'] ?? $container->load('getAssets_PackageFrontJsService'));
        }, 1))));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(($container->privates['debug.file_link_formatter'] ??= new \Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter(NULL)), \dirname(__DIR__, 5), 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($d));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension(new \Symfony\Component\HttpFoundation\UrlHelper($a, $d)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\WebLinkExtension($a));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SerializerExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension($c));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.stringloader'] ??= new \Twig\Extension\StringLoaderExtension()));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.context_iso_code_provider_extension'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_ContextIsoCodeProviderExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.data_formatter'] ??= new \PrestaShopBundle\Twig\DataFormatterExtension()));
        $instance->addExtension(new \PrestaShopBundle\Twig\Extension\ColorBrightnessCalculatorExtension(($container->services['PrestaShop\\PrestaShop\\Core\\Util\\ColorBrightnessCalculator'] ??= new \PrestaShop\PrestaShop\Core\Util\ColorBrightnessCalculator())));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.documentation_link_provider_extension'] ?? $container->load('get_Container_Private_Prestashop_Bundle_Twig_Extension_DocumentationLinkProviderExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.entity_search_extension'] ??= new \PrestaShopBundle\Twig\Extension\EntitySearchExtension()));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.column'] ?? $container->load('get_Container_Private_Prestashop_Bundle_Twig_Extension_ColumnService')));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.js_router_metadata_extension'] ?? $container->load('get_Container_Private_Prestashop_Bundle_Twig_Extension_JsRouterMetadataExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.localization_extension'] ?? $container->load('get_Container_Private_Prestashop_Bundle_Twig_Extension_LocalizationExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.multistore_components_extension'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_MultistoreComponentsExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.multistore_url'] ?? $container->load('get_Container_Private_Prestashop_Bundle_Twig_Extension_MultistoreUrlService')));
        $instance->addExtension(($container->services['.container.private.prestashop.bundle.twig.extension.number_extension'] ??= new \PrestaShopBundle\Twig\Extension\NumberExtension()));
        $instance->addExtension(new \PrestaShopBundle\Twig\Extension\PathExtension($e, ($container->privates['PrestaShop\\PrestaShop\\Core\\Security\\Hashing'] ??= new \PrestaShop\PrestaShop\Core\Security\Hashing()), 'stI2AkApLnErV81VHFnDtfKiGcf5jNCLj2VQinm8aeLXfny8B8c5gLN6GbpRnL84'));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.path_with_back_url_extension'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_PathWithBackUrlExtensionService')));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.hook'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_HookService')));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.layout'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_LayoutService')));
        $instance->addExtension(($container->services['.container.private.prestashop.twig.extension.translation'] ?? $container->load('get_Container_Private_Prestashop_Twig_Extension_TranslationService')));
        $instance->addExtension(new \PrestaShop\TranslationToolsBundle\Twig\Extension\TranslationExtension());
        $instance->addExtension(new \Symfony\UX\TwigComponent\Twig\ComponentExtension((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'Symfony\\UX\\TwigComponent\\ComponentRenderer' => ['privates', 'ux.twig_component.component_renderer', 'getUx_TwigComponent_ComponentRendererService', true],
        ], [
            'Symfony\\UX\\TwigComponent\\ComponentRenderer' => 'Symfony\\UX\\TwigComponent\\ComponentRenderer',
        ]))->withContext('ux.twig_component.twig.component_extension', $container)));
        $instance->addExtension(new \Twig\Extra\String\StringExtension());
        $instance->addExtension(new \Symfony\UX\Icons\Twig\UXIconExtension());
        $instance->addGlobal('app', $f);
        $instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', true],
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', true],
            'Symfony\\Bridge\\Twig\\Extension\\SerializerRuntime' => ['privates', 'twig.runtime.serializer', 'getTwig_Runtime_SerializerService', true],
            'Symfony\\Component\\Form\\FormRenderer' => ['privates', 'twig.form.renderer', 'getTwig_Form_RendererService', true],
            'Symfony\\UX\\Icons\\IconRenderer' => ['privates', '.ux_icons.icon_renderer', 'get_UxIcons_IconRendererService', true],
        ], [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\SerializerRuntime' => '?',
            'Symfony\\Component\\Form\\FormRenderer' => '?',
            'Symfony\\UX\\Icons\\IconRenderer' => '?',
        ])));
        $instance->addGlobal('ps', new \PrestaShopBundle\Twig\Layout\PrestaShopLayoutGlobalVariables($e, ($container->privates['PrestaShopBundle\\Twig\\Layout\\TemplateVariables'] ?? $container->load('getTemplateVariablesService')), ($container->privates['PrestaShopBundle\\Twig\\Layout\\SmartyVariablesFiller'] ?? $container->load('getSmartyVariablesFillerService'))));
        $instance->addGlobal('webpack_server', false);
        $instance->addGlobal('multistore_field_prefix', 'multistore_');
        $instance->addGlobal('modify_all_shops_prefix', 'modify_all_shops_');
        $instance->addGlobal('disabling_switch_prefix', 'disabling_switch_');
        (new \Symfony\UX\TwigComponent\Twig\TwigEnvironmentConfigurator(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ',')))->configure($instance);

        return $instance;
    }
}
