<?php

namespace ContainerGqfUnWk;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDistributionapiclient_DistributionApiService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'distributionapiclient.distribution_api' shared service.
     *
     * @return \PrestaShop\Module\DistributionApiClient\DistributionApi
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = new \PrestaShop\CircuitBreaker\FactorySettings(2, 3, 86400);

        $b = \GuzzleHttp\HandlerStack::create();
        $b->push(new \PrestaShop\Module\DistributionApiClient\Middleware\Cache(\Doctrine\Common\Cache\Psr6\DoctrineProvider::wrap(new \Symfony\Component\Cache\Adapter\FilesystemAdapter('', 86400, (\dirname(__DIR__, 2).'//distribution-api')))));

        $a->setStorage(($container->services['prestashop.core.circuit_breaker.storage'] ?? $container->load('getPrestashop_Core_CircuitBreaker_StorageService')));
        $a->setClientOptions(['handler' => $b]);

        return $container->services['distributionapiclient.distribution_api'] = new \PrestaShop\Module\DistributionApiClient\DistributionApi((new \PrestaShop\CircuitBreaker\AdvancedCircuitBreakerFactory())->create($a), ($container->services['PrestaShop\\PrestaShop\\Core\\Module\\SourceHandler\\SourceHandlerFactory'] ?? $container->load('getSourceHandlerFactoryService')), ($container->services['prestashop.adapter.data_provider.module'] ?? $container->load('getPrestashop_Adapter_DataProvider_ModuleService')), new \PrestaShop\Module\DistributionApiClient\ShopDataProvider(), ($container->services['.container.private.prestashop.core.foundation.version'] ?? $container->load('get_Container_Private_Prestashop_Core_Foundation_VersionService'))->getSemVersion(), (\dirname(__DIR__, 2).'//downloads'));
    }
}
