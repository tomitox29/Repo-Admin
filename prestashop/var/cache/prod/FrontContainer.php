<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class FrontContainer extends \PrestaShop\PrestaShop\Adapter\Container\LegacyContainer
{
    protected $parameters = [];
    protected \Closure $getService;

    public function __construct()
    {
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'employee' => true,
            'shop' => true,
        ];
        $this->methodMap = [
            'PrestaShopBundle\\Security\\Admin\\LegacyAdminTokenValidator' => 'getLegacyAdminTokenValidatorService',
            'PrestaShop\\PrestaShop\\Adapter\\Configuration' => 'getConfigurationService',
            'PrestaShop\\PrestaShop\\Adapter\\ContextStateManager' => 'getContextStateManagerService',
            'PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider' => 'getCurrencyDataProviderService',
            'PrestaShop\\PrestaShop\\Adapter\\Employee\\EmployeeRepository' => 'getEmployeeRepositoryService',
            'PrestaShop\\PrestaShop\\Adapter\\LegacyContext' => 'getLegacyContextService',
            'PrestaShop\\PrestaShop\\Adapter\\Tools' => 'getToolsService',
            'PrestaShop\\PrestaShop\\Core\\Crypto\\Hashing' => 'getHashingService',
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\FeatureFlagStateCheckerInterface' => 'getFeatureFlagStateCheckerInterfaceService',
            'PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\Repository' => 'getRepositoryService',
            'Symfony\\Component\\HttpFoundation\\RequestStack' => 'getRequestStackService',
            'annotation_reader' => 'getAnnotationReaderService',
            'array' => 'getArrayService',
            'configuration' => 'getConfiguration2Service',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'context' => 'getContextService',
            'db' => 'getDbService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'prestashop.adapter.data_provider.country' => 'getPrestashop_Adapter_DataProvider_CountryService',
            'prestashop.adapter.environment' => 'getPrestashop_Adapter_EnvironmentService',
            'prestashop.adapter.module.repository.module_repository' => 'getPrestashop_Adapter_Module_Repository_ModuleRepositoryService',
            'prestashop.adapter.validate' => 'getPrestashop_Adapter_ValidateService',
            'prestashop.core.circuit_breaker.advanced_factory' => 'getPrestashop_Core_CircuitBreaker_AdvancedFactoryService',
            'prestashop.core.circuit_breaker.cache' => 'getPrestashop_Core_CircuitBreaker_CacheService',
            'prestashop.core.circuit_breaker.doctrine_cache' => 'getPrestashop_Core_CircuitBreaker_DoctrineCacheService',
            'prestashop.core.circuit_breaker.storage' => 'getPrestashop_Core_CircuitBreaker_StorageService',
            'prestashop.core.filter.front_end_object.cart' => 'getPrestashop_Core_Filter_FrontEndObject_CartService',
            'prestashop.core.filter.front_end_object.configuration' => 'getPrestashop_Core_Filter_FrontEndObject_ConfigurationService',
            'prestashop.core.filter.front_end_object.customer' => 'getPrestashop_Core_Filter_FrontEndObject_CustomerService',
            'prestashop.core.filter.front_end_object.main' => 'getPrestashop_Core_Filter_FrontEndObject_MainService',
            'prestashop.core.filter.front_end_object.product' => 'getPrestashop_Core_Filter_FrontEndObject_ProductService',
            'prestashop.core.filter.front_end_object.product_collection' => 'getPrestashop_Core_Filter_FrontEndObject_ProductCollectionService',
            'prestashop.core.filter.front_end_object.search_result_product' => 'getPrestashop_Core_Filter_FrontEndObject_SearchResultProductService',
            'prestashop.core.filter.front_end_object.search_result_product_collection' => 'getPrestashop_Core_Filter_FrontEndObject_SearchResultProductCollectionService',
            'prestashop.core.filter.front_end_object.shop' => 'getPrestashop_Core_Filter_FrontEndObject_ShopService',
            'prestashop.core.localization.cache.adapter' => 'getPrestashop_Core_Localization_Cache_AdapterService',
            'prestashop.core.localization.cldr.cache.adapter' => 'getPrestashop_Core_Localization_Cldr_Cache_AdapterService',
            'prestashop.core.localization.cldr.datalayer.locale_cache' => 'getPrestashop_Core_Localization_Cldr_Datalayer_LocaleCacheService',
            'prestashop.core.localization.cldr.datalayer.locale_reference' => 'getPrestashop_Core_Localization_Cldr_Datalayer_LocaleReferenceService',
            'prestashop.core.localization.cldr.locale_data_source' => 'getPrestashop_Core_Localization_Cldr_LocaleDataSourceService',
            'prestashop.core.localization.cldr.locale_repository' => 'getPrestashop_Core_Localization_Cldr_LocaleRepositoryService',
            'prestashop.core.localization.cldr.reader' => 'getPrestashop_Core_Localization_Cldr_ReaderService',
            'prestashop.core.localization.currency.datasource' => 'getPrestashop_Core_Localization_Currency_DatasourceService',
            'prestashop.core.localization.currency.middleware.cache' => 'getPrestashop_Core_Localization_Currency_Middleware_CacheService',
            'prestashop.core.localization.currency.middleware.database' => 'getPrestashop_Core_Localization_Currency_Middleware_DatabaseService',
            'prestashop.core.localization.currency.middleware.installed' => 'getPrestashop_Core_Localization_Currency_Middleware_InstalledService',
            'prestashop.core.localization.currency.middleware.reference' => 'getPrestashop_Core_Localization_Currency_Middleware_ReferenceService',
            'prestashop.core.localization.currency.repository' => 'getPrestashop_Core_Localization_Currency_RepositoryService',
            'prestashop.core.localization.locale.context_locale' => 'getPrestashop_Core_Localization_Locale_ContextLocaleService',
            'prestashop.database.naming_strategy' => 'getPrestashop_Database_NamingStrategyService',
            'prestashop.translation.translator_language_loader' => 'getPrestashop_Translation_TranslatorLanguageLoaderService',
            'product_comment_criterion_repository' => 'getProductCommentCriterionRepositoryService',
            'product_comment_repository' => 'getProductCommentRepositoryService',
            'prestashop.adapter.tools' => 'getPrestashop_Adapter_ToolsService',
        ];
        $this->aliases = [
            'PrestaShop\\PrestaShop\\Core\\Currency\\CurrencyDataProviderInterface' => 'PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider',
            'PrestaShop\\PrestaShop\\Core\\Localization\\LocaleInterface' => 'prestashop.core.localization.locale.context_locale',
            'PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\RepositoryInterface' => 'PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\Repository',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'hashing' => 'PrestaShop\\PrestaShop\\Core\\Crypto\\Hashing',
            'prestashop.adapter.context_state_manager' => 'PrestaShop\\PrestaShop\\Adapter\\ContextStateManager',
            'prestashop.adapter.data_provider.currency' => 'PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider',
            'prestashop.adapter.legacy.configuration' => 'PrestaShop\\PrestaShop\\Adapter\\Configuration',
            'prestashop.adapter.legacy.context' => 'PrestaShop\\PrestaShop\\Adapter\\LegacyContext',
            'prestashop.core.localization.cldr.datalayer.top_layer' => 'prestashop.core.localization.cldr.datalayer.locale_cache',
            'prestashop.core.localization.currency.middleware.top_layer' => 'prestashop.core.localization.currency.middleware.cache',
            'prestashop.core.localization.locale.repository' => 'PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\Repository',
            'request_stack' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
        ];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            '.abstract.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer' => true,
            '.abstract.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer' => true,
            '.abstract.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer' => true,
            '.abstract.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer' => true,
            '.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\TypeLayerInterface.0.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer' => true,
            '.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\TypeLayerInterface.0.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer' => true,
            '.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\TypeLayerInterface.0.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer' => true,
            '.instanceof.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\TypeLayerInterface.0.PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer' => true,
            '.service_locator.fiyeV0.' => true,
            '.service_locator.lWqUA3s' => true,
            'Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController' => true,
            'Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider' => true,
            'Doctrine\\Common\\Persistence\\ManagerRegistry' => true,
            'Doctrine\\DBAL\\Connection' => true,
            'Doctrine\\DBAL\\Connection $defaultConnection' => true,
            'Doctrine\\DBAL\\Driver\\Connection' => true,
            'Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand' => true,
            'Doctrine\\ORM\\EntityManagerInterface' => true,
            'Doctrine\\ORM\\EntityManagerInterface $defaultEntityManager' => true,
            'Doctrine\\Persistence\\ManagerRegistry' => true,
            'PrestaShopBundle\\DependencyInjection\\CacheAdapterFactory' => true,
            'PrestaShopBundle\\DependencyInjection\\RuntimeConstEnvVarProcessor' => true,
            'PrestaShopBundle\\Entity\\Repository\\FeatureFlagRepository' => true,
            'PrestaShopBundle\\Entity\\Repository\\TabRepository' => true,
            'PrestaShop\\PrestaShop\\Adapter\\Country\\CountryDataProvider' => true,
            'PrestaShop\\PrestaShop\\Core\\EnvironmentInterface' => true,
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\FeatureFlagManager' => true,
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer' => true,
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer' => true,
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer' => true,
            'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer' => true,
            'PrestaShop\\PrestaShop\\Core\\Security\\Hashing' => true,
            'data_collector.doctrine' => true,
            'doctrine.cache_clear_metadata_command' => true,
            'doctrine.cache_clear_query_cache_command' => true,
            'doctrine.cache_clear_result_command' => true,
            'doctrine.cache_collection_region_command' => true,
            'doctrine.clear_entity_region_command' => true,
            'doctrine.clear_query_region_command' => true,
            'doctrine.database_create_command' => true,
            'doctrine.database_drop_command' => true,
            'doctrine.dbal.connection' => true,
            'doctrine.dbal.connection.configuration' => true,
            'doctrine.dbal.connection.event_manager' => true,
            'doctrine.dbal.connection_factory' => true,
            'doctrine.dbal.default_connection.configuration' => true,
            'doctrine.dbal.default_connection.event_manager' => true,
            'doctrine.dbal.event_manager' => true,
            'doctrine.dbal.logger' => true,
            'doctrine.dbal.logger.backtrace' => true,
            'doctrine.dbal.logger.chain' => true,
            'doctrine.dbal.logger.profiling' => true,
            'doctrine.dbal.logging_middleware' => true,
            'doctrine.dbal.schema_asset_filter_manager' => true,
            'doctrine.dbal.well_known_schema_asset_filter' => true,
            'doctrine.ensure_production_settings_command' => true,
            'doctrine.mapping_convert_command' => true,
            'doctrine.mapping_import_command' => true,
            'doctrine.mapping_info_command' => true,
            'doctrine.orm.configuration' => true,
            'doctrine.orm.container_repository_factory' => true,
            'doctrine.orm.default_annotation_metadata_driver' => true,
            'doctrine.orm.default_configuration' => true,
            'doctrine.orm.default_entity_listener_resolver' => true,
            'doctrine.orm.default_entity_manager.event_manager' => true,
            'doctrine.orm.default_entity_manager.property_info_extractor' => true,
            'doctrine.orm.default_entity_manager.validator_loader' => true,
            'doctrine.orm.default_listeners.attach_entity_listeners' => true,
            'doctrine.orm.default_manager_configurator' => true,
            'doctrine.orm.default_metadata_cache' => true,
            'doctrine.orm.default_metadata_driver' => true,
            'doctrine.orm.default_query_cache' => true,
            'doctrine.orm.default_result_cache' => true,
            'doctrine.orm.entity_manager.abstract' => true,
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber' => true,
            'doctrine.orm.listeners.doctrine_token_provider_schema_subscriber' => true,
            'doctrine.orm.listeners.resolve_target_entity' => true,
            'doctrine.orm.manager_configurator.abstract' => true,
            'doctrine.orm.messenger.doctrine_schema_subscriber' => true,
            'doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager' => true,
            'doctrine.orm.metadata.annotation_reader' => true,
            'doctrine.orm.naming_strategy.default' => true,
            'doctrine.orm.naming_strategy.underscore' => true,
            'doctrine.orm.naming_strategy.underscore_number_aware' => true,
            'doctrine.orm.proxy_cache_warmer' => true,
            'doctrine.orm.quote_strategy.ansi' => true,
            'doctrine.orm.quote_strategy.default' => true,
            'doctrine.orm.security.user.provider' => true,
            'doctrine.orm.validator.unique' => true,
            'doctrine.orm.validator_initializer' => true,
            'doctrine.query_dql_command' => true,
            'doctrine.query_sql_command' => true,
            'doctrine.schema_create_command' => true,
            'doctrine.schema_drop_command' => true,
            'doctrine.schema_update_command' => true,
            'doctrine.schema_validate_command' => true,
            'doctrine.twig.doctrine_extension' => true,
            'doctrine.ulid_generator' => true,
            'doctrine.uuid_generator' => true,
            'form.type.entity' => true,
            'form.type_guesser.doctrine' => true,
            'messenger.middleware.doctrine_close_connection' => true,
            'messenger.middleware.doctrine_open_transaction_logger' => true,
            'messenger.middleware.doctrine_ping_connection' => true,
            'messenger.middleware.doctrine_transaction' => true,
            'messenger.transport.doctrine.factory' => true,
            'prestashop.core.crypto.hashing' => true,
        ];
    }

    protected function createProxy($class, \Closure $factory)
    {
        return $factory();
    }

    /**
     * Gets the public 'PrestaShopBundle\Security\Admin\LegacyAdminTokenValidator' shared service.
     *
     * @return \PrestaShopBundle\Security\Admin\LegacyAdminTokenValidator
     */
    protected static function getLegacyAdminTokenValidatorService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['PrestaShopBundle\\Security\\Admin\\LegacyAdminTokenValidator'] = $container->createProxy('LegacyAdminTokenValidatorGhost2817cf2', static fn () => \LegacyAdminTokenValidatorGhost2817cf2::createLazyGhost(static fn ($proxy) => self::getLegacyAdminTokenValidatorService($container, $proxy)));
        }

        return ($lazyLoad->__construct(($container->services['PrestaShop\\PrestaShop\\Adapter\\Employee\\EmployeeRepository'] ??= new \PrestaShop\PrestaShop\Adapter\Employee\EmployeeRepository()), ($container->services['Symfony\\Component\\HttpFoundation\\RequestStack'] ?? self::getRequestStackService($container))) && false ?: $lazyLoad);
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Configuration' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Configuration
     */
    protected static function getConfigurationService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] = new \PrestaShop\PrestaShop\Adapter\Configuration();
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\ContextStateManager' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\ContextStateManager
     */
    protected static function getContextStateManagerService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\ContextStateManager'] = new \PrestaShop\PrestaShop\Adapter\ContextStateManager(($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container)));
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Currency\CurrencyDataProvider' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Currency\CurrencyDataProvider
     */
    protected static function getCurrencyDataProviderService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider'] = new \PrestaShop\PrestaShop\Adapter\Currency\CurrencyDataProvider(($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration()), ((($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container))->getContext()->shop) ? (($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container))->getContext()->shop->id) : (null)));
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Employee\EmployeeRepository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Employee\EmployeeRepository
     */
    protected static function getEmployeeRepositoryService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Employee\\EmployeeRepository'] = new \PrestaShop\PrestaShop\Adapter\Employee\EmployeeRepository();
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\LegacyContext' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\LegacyContext
     */
    protected static function getLegacyContextService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] = new \PrestaShop\PrestaShop\Adapter\LegacyContext('/mails/themes', ($container->services['PrestaShop\\PrestaShop\\Adapter\\Tools'] ??= new \PrestaShop\PrestaShop\Adapter\Tools()));
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Tools' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Tools
     */
    protected static function getToolsService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Tools'] = new \PrestaShop\PrestaShop\Adapter\Tools();
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Core\Crypto\Hashing' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Crypto\Hashing
     */
    protected static function getHashingService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Core\\Crypto\\Hashing'] = new \PrestaShop\PrestaShop\Core\Crypto\Hashing();
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Core\FeatureFlag\FeatureFlagStateCheckerInterface' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Core\FeatureFlag\FeatureFlagManager
     */
    protected static function getFeatureFlagStateCheckerInterfaceService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['PrestaShop\\PrestaShop\\Core\\FeatureFlag\\FeatureFlagStateCheckerInterface'] = $container->createProxy('FeatureFlagManagerGhost61268b3', static fn () => \FeatureFlagManagerGhost61268b3::createLazyGhost(static fn ($proxy) => self::getFeatureFlagStateCheckerInterfaceService($container, $proxy)));
        }

        return ($lazyLoad->__construct(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'env' => ['privates', 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer', 'getEnvLayerService', false],
            'db' => ['privates', 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer', 'getDbLayerService', false],
            'dotenv' => ['privates', 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer', 'getDotEnvLayerService', false],
            'query' => ['privates', 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer', 'getQueryLayerService', false],
        ], [
            'env' => 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer',
            'db' => 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer',
            'dotenv' => 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer',
            'query' => 'PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer',
        ]), ($container->privates['PrestaShopBundle\\Entity\\Repository\\FeatureFlagRepository'] ?? self::getFeatureFlagRepositoryService($container))) && false ?: $lazyLoad);
    }

    /**
     * Gets the public 'PrestaShop\PrestaShop\Core\Localization\Locale\Repository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Locale\Repository
     */
    protected static function getRepositoryService($container)
    {
        return $container->services['PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\Repository'] = new \PrestaShop\PrestaShop\Core\Localization\Locale\Repository(($container->services['prestashop.core.localization.cldr.locale_repository'] ?? self::getPrestashop_Core_Localization_Cldr_LocaleRepositoryService($container)), ($container->services['prestashop.core.localization.currency.repository'] ?? self::getPrestashop_Core_Localization_Currency_RepositoryService($container)));
    }

    /**
     * Gets the public 'Symfony\Component\HttpFoundation\RequestStack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected static function getRequestStackService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['Symfony\\Component\\HttpFoundation\\RequestStack'] = $container->createProxy('RequestStackProxyA9608a6', static fn () => \RequestStackProxyA9608a6::createLazyProxy(static fn () => self::getRequestStackService($container, false)));
        }

        return \PrestaShopBundle\Http\RequestStackFactory::buildRequestStack();
    }

    /**
     * Gets the public 'annotation_reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader
     */
    protected static function getAnnotationReaderService($container)
    {
        return $container->services['annotation_reader'] = new \Doctrine\Common\Annotations\AnnotationReader();
    }

    /**
     * Gets the public 'array' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected static function getArrayService($container)
    {
        return $container->services['array'] = (new \PrestaShopBundle\DependencyInjection\CacheAdapterFactory())->getCacheAdapter('array');
    }

    /**
     * Gets the public 'configuration' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Configuration
     */
    protected static function getConfiguration2Service($container)
    {
        return $container->services['configuration'] = new \PrestaShop\PrestaShop\Adapter\Configuration();
    }

    /**
     * Gets the public 'container.env_var_processors_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected static function getContainer_EnvVarProcessorsLocatorService($container)
    {
        return $container->services['container.env_var_processors_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'const' => ['privates', 'PrestaShopBundle\\DependencyInjection\\RuntimeConstEnvVarProcessor', 'getRuntimeConstEnvVarProcessorService', false],
        ], [
            'const' => '?',
        ]);
    }

    /**
     * Gets the public 'context' shared service.
     *
     * @return \Context
     */
    protected static function getContextService($container)
    {
        return $container->services['context'] = \Context::getContext();
    }

    /**
     * Gets the public 'db' shared service.
     *
     * @return \Db
     */
    protected static function getDbService($container)
    {
        return $container->services['db'] = \Db::getInstance();
    }

    /**
     * Gets the public 'doctrine' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry
     */
    protected static function getDoctrineService($container)
    {
        return $container->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($container, $container->parameters['doctrine.connections'], $container->parameters['doctrine.entity_managers'], 'default', 'default');
    }

    /**
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \PrestaShopBundle\Doctrine\DatabaseConnection
     */
    protected static function getDoctrine_Dbal_DefaultConnectionService($container)
    {
        return $container->services['doctrine.dbal.default_connection'] = (new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory([]))->createConnection(['driver' => 'pdo_mysql', 'host' => 'db', 'port' => '', 'dbname' => 'prestashop', 'user' => 'prestashopuser', 'password' => 'prestashoppassword', 'charset' => 'utf8mb4', 'driverOptions' => [1002 => 'SET sql_mode=(SELECT REPLACE(@@sql_mode,\'ONLY_FULL_GROUP_BY\',\'\'))', 1013 => $container->getEnv('const:runtime:_PS_ALLOW_MULTI_STATEMENTS_QUERIES_')], 'wrapperClass' => 'PrestaShopBundle\\Doctrine\\DatabaseConnection', 'defaultTableOptions' => []], new \Doctrine\DBAL\Configuration(), new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($container), ['enum' => 'string']);
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    protected static function getDoctrine_Orm_DefaultEntityManagerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['doctrine.orm.default_entity_manager'] = $container->createProxy('EntityManagerProxyCaac541', static fn () => \EntityManagerProxyCaac541::createLazyProxy(static fn () => self::getDoctrine_Orm_DefaultEntityManagerService($container, false)));
        }

        $a = new \Doctrine\ORM\Configuration();

        $b = ($container->services['array'] ?? self::getArrayService($container));
        $c = new \Doctrine\Persistence\Mapping\Driver\MappingDriverChain();

        $d = ($container->services['annotation_reader'] ??= new \Doctrine\Common\Annotations\AnnotationReader());
        $e = new \Doctrine\ORM\Mapping\Driver\AnnotationDriver($d, ['/var/www/html/modules/productcomments/src/Entity']);
        $e->addExcludePaths(['/var/www/html/modules/productcomments/src/Entity/index.php']);

        $c->addDriver(new \Doctrine\ORM\Mapping\Driver\AnnotationDriver($d, ['/var/www/html/src/PrestaShopBundle/Entity']), 'PrestaShop');
        $c->addDriver($e, 'PrestaShop\\Module\\ProductComment\\Entity');

        $a->setEntityNamespaces(['PrestaShopBundle\\Entity' => 'PrestaShop']);
        $a->setMetadataCache($b);
        $a->setQueryCache($b);
        $a->setResultCache($b);
        $a->setMetadataDriverImpl($c);
        $a->setProxyDir('/var/www/html/var/cache/prod//doctrine/orm/Proxies');
        $a->setProxyNamespace('Proxies');
        $a->setAutoGenerateProxyClasses(false);
        $a->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $a->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $a->setNamingStrategy(($container->services['prestashop.database.naming_strategy'] ?? self::getPrestashop_Database_NamingStrategyService($container)));
        $a->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $a->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($container));
        $a->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\ServiceLocator([])));
        $a->addCustomStringFunction('regexp', 'DoctrineExtensions\\Query\\Mysql\\Regexp');

        $instance = \Doctrine\ORM\EntityManager::create(($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), $a);

        (new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator([], []))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'prestashop.adapter.data_provider.country' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Country\CountryDataProvider
     */
    protected static function getPrestashop_Adapter_DataProvider_CountryService($container)
    {
        return $container->services['prestashop.adapter.data_provider.country'] = new \PrestaShop\PrestaShop\Adapter\Country\CountryDataProvider();
    }

    /**
     * Gets the public 'prestashop.adapter.environment' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Environment
     */
    protected static function getPrestashop_Adapter_EnvironmentService($container)
    {
        return $container->services['prestashop.adapter.environment'] = new \PrestaShop\PrestaShop\Adapter\Environment(false, 'prod', 'front');
    }

    /**
     * Gets the public 'prestashop.adapter.module.repository.module_repository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Module\Repository\ModuleRepository
     */
    protected static function getPrestashop_Adapter_Module_Repository_ModuleRepositoryService($container)
    {
        return $container->services['prestashop.adapter.module.repository.module_repository'] = new \PrestaShop\PrestaShop\Adapter\Module\Repository\ModuleRepository('/var/www/html', '/var/www/html/modules/');
    }

    /**
     * Gets the public 'prestashop.adapter.validate' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Validate
     */
    protected static function getPrestashop_Adapter_ValidateService($container)
    {
        return $container->services['prestashop.adapter.validate'] = new \PrestaShop\PrestaShop\Adapter\Validate();
    }

    /**
     * Gets the public 'prestashop.core.circuit_breaker.advanced_factory' shared service.
     *
     * @return \PrestaShop\CircuitBreaker\AdvancedCircuitBreakerFactory
     */
    protected static function getPrestashop_Core_CircuitBreaker_AdvancedFactoryService($container)
    {
        return $container->services['prestashop.core.circuit_breaker.advanced_factory'] = new \PrestaShop\CircuitBreaker\AdvancedCircuitBreakerFactory();
    }

    /**
     * Gets the public 'prestashop.core.circuit_breaker.cache' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected static function getPrestashop_Core_CircuitBreaker_CacheService($container)
    {
        return $container->services['prestashop.core.circuit_breaker.cache'] = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('', 0, (($container->services['prestashop.adapter.environment'] ??= new \PrestaShop\PrestaShop\Adapter\Environment(false, 'prod', 'front'))->getCacheDir() . "/circuit_breaker"));
    }

    /**
     * Gets the public 'prestashop.core.circuit_breaker.doctrine_cache' shared service.
     *
     * @return \Doctrine\Common\Cache\Psr6\DoctrineProvider
     */
    protected static function getPrestashop_Core_CircuitBreaker_DoctrineCacheService($container)
    {
        return $container->services['prestashop.core.circuit_breaker.doctrine_cache'] = \Doctrine\Common\Cache\Psr6\DoctrineProvider::wrap(($container->services['prestashop.core.circuit_breaker.cache'] ?? self::getPrestashop_Core_CircuitBreaker_CacheService($container)));
    }

    /**
     * Gets the public 'prestashop.core.circuit_breaker.storage' shared service.
     *
     * @return \PrestaShop\CircuitBreaker\Storage\DoctrineCache
     */
    protected static function getPrestashop_Core_CircuitBreaker_StorageService($container)
    {
        return $container->services['prestashop.core.circuit_breaker.storage'] = new \PrestaShop\CircuitBreaker\Storage\DoctrineCache(($container->services['prestashop.core.circuit_breaker.doctrine_cache'] ?? self::getPrestashop_Core_CircuitBreaker_DoctrineCacheService($container)));
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.cart' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\CartFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_CartService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.cart'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\CartFilter(($container->services['prestashop.core.filter.front_end_object.product_collection'] ?? self::getPrestashop_Core_Filter_FrontEndObject_ProductCollectionService($container)));
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.configuration' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ConfigurationFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_ConfigurationService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.configuration'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ConfigurationFilter();
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.customer' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\CustomerFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_CustomerService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.customer'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\CustomerFilter();
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.main' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\MainFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_MainService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.main'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\MainFilter(['cart' => ($container->services['prestashop.core.filter.front_end_object.cart'] ?? self::getPrestashop_Core_Filter_FrontEndObject_CartService($container)), 'customer' => ($container->services['prestashop.core.filter.front_end_object.customer'] ??= new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\CustomerFilter()), 'shop' => ($container->services['prestashop.core.filter.front_end_object.shop'] ??= new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ShopFilter()), 'configuration' => ($container->services['prestashop.core.filter.front_end_object.configuration'] ??= new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ConfigurationFilter())]);
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.product' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ProductFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_ProductService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.product'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ProductFilter();
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.product_collection' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\CollectionFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_ProductCollectionService($container)
    {
        $container->services['prestashop.core.filter.front_end_object.product_collection'] = $instance = new \PrestaShop\PrestaShop\Core\Filter\CollectionFilter();

        $instance->queue([($container->services['prestashop.core.filter.front_end_object.product'] ??= new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ProductFilter())]);

        return $instance;
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.search_result_product' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\SearchResultProductFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_SearchResultProductService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.search_result_product'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\SearchResultProductFilter();
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.search_result_product_collection' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\CollectionFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_SearchResultProductCollectionService($container)
    {
        $container->services['prestashop.core.filter.front_end_object.search_result_product_collection'] = $instance = new \PrestaShop\PrestaShop\Core\Filter\CollectionFilter();

        $instance->queue([($container->services['prestashop.core.filter.front_end_object.search_result_product'] ??= new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\SearchResultProductFilter())]);

        return $instance;
    }

    /**
     * Gets the public 'prestashop.core.filter.front_end_object.shop' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ShopFilter
     */
    protected static function getPrestashop_Core_Filter_FrontEndObject_ShopService($container)
    {
        return $container->services['prestashop.core.filter.front_end_object.shop'] = new \PrestaShop\PrestaShop\Core\Filter\FrontEndObject\ShopFilter();
    }

    /**
     * Gets the public 'prestashop.core.localization.cache.adapter' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\ArrayAdapter
     */
    protected static function getPrestashop_Core_Localization_Cache_AdapterService($container)
    {
        return $container->services['prestashop.core.localization.cache.adapter'] = new \Symfony\Component\Cache\Adapter\ArrayAdapter();
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.cache.adapter' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected static function getPrestashop_Core_Localization_Cldr_Cache_AdapterService($container)
    {
        return $container->services['prestashop.core.localization.cldr.cache.adapter'] = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('CLDR', 0, '/var/www/html/var/cache/prod//localization');
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.datalayer.locale_cache' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\CLDR\DataLayer\LocaleCache
     */
    protected static function getPrestashop_Core_Localization_Cldr_Datalayer_LocaleCacheService($container)
    {
        $container->services['prestashop.core.localization.cldr.datalayer.locale_cache'] = $instance = new \PrestaShop\PrestaShop\Core\Localization\CLDR\DataLayer\LocaleCache(($container->services['prestashop.core.localization.cldr.cache.adapter'] ??= new \Symfony\Component\Cache\Adapter\FilesystemAdapter('CLDR', 0, '/var/www/html/var/cache/prod//localization')));

        $instance->setLowerLayer(($container->services['prestashop.core.localization.cldr.datalayer.locale_reference'] ?? self::getPrestashop_Core_Localization_Cldr_Datalayer_LocaleReferenceService($container)));

        return $instance;
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.datalayer.locale_reference' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\CLDR\DataLayer\LocaleReference
     */
    protected static function getPrestashop_Core_Localization_Cldr_Datalayer_LocaleReferenceService($container)
    {
        return $container->services['prestashop.core.localization.cldr.datalayer.locale_reference'] = new \PrestaShop\PrestaShop\Core\Localization\CLDR\DataLayer\LocaleReference(($container->services['prestashop.core.localization.cldr.reader'] ??= new \PrestaShop\PrestaShop\Core\Localization\CLDR\Reader()));
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.locale_data_source' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\CLDR\LocaleDataSource
     */
    protected static function getPrestashop_Core_Localization_Cldr_LocaleDataSourceService($container)
    {
        return $container->services['prestashop.core.localization.cldr.locale_data_source'] = new \PrestaShop\PrestaShop\Core\Localization\CLDR\LocaleDataSource(($container->services['prestashop.core.localization.cldr.datalayer.locale_cache'] ?? self::getPrestashop_Core_Localization_Cldr_Datalayer_LocaleCacheService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.locale_repository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\CLDR\LocaleRepository
     */
    protected static function getPrestashop_Core_Localization_Cldr_LocaleRepositoryService($container)
    {
        return $container->services['prestashop.core.localization.cldr.locale_repository'] = new \PrestaShop\PrestaShop\Core\Localization\CLDR\LocaleRepository(($container->services['prestashop.core.localization.cldr.locale_data_source'] ?? self::getPrestashop_Core_Localization_Cldr_LocaleDataSourceService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.cldr.reader' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\CLDR\Reader
     */
    protected static function getPrestashop_Core_Localization_Cldr_ReaderService($container)
    {
        return $container->services['prestashop.core.localization.cldr.reader'] = new \PrestaShop\PrestaShop\Core\Localization\CLDR\Reader();
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.datasource' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\CurrencyDataSource
     */
    protected static function getPrestashop_Core_Localization_Currency_DatasourceService($container)
    {
        return $container->services['prestashop.core.localization.currency.datasource'] = new \PrestaShop\PrestaShop\Core\Localization\Currency\CurrencyDataSource(($container->services['prestashop.core.localization.currency.middleware.cache'] ?? self::getPrestashop_Core_Localization_Currency_Middleware_CacheService($container)), ($container->services['prestashop.core.localization.currency.middleware.installed'] ?? self::getPrestashop_Core_Localization_Currency_Middleware_InstalledService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.middleware.cache' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyCache
     */
    protected static function getPrestashop_Core_Localization_Currency_Middleware_CacheService($container)
    {
        $container->services['prestashop.core.localization.currency.middleware.cache'] = $instance = new \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyCache(($container->services['prestashop.core.localization.cache.adapter'] ??= new \Symfony\Component\Cache\Adapter\ArrayAdapter()));

        $instance->setLowerLayer(($container->services['prestashop.core.localization.currency.middleware.database'] ?? self::getPrestashop_Core_Localization_Currency_Middleware_DatabaseService($container)));

        return $instance;
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.middleware.database' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyDatabase
     */
    protected static function getPrestashop_Core_Localization_Currency_Middleware_DatabaseService($container)
    {
        $container->services['prestashop.core.localization.currency.middleware.database'] = $instance = new \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyDatabase(($container->services['PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider'] ?? self::getCurrencyDataProviderService($container)));

        $instance->setLowerLayer(($container->services['prestashop.core.localization.currency.middleware.reference'] ?? self::getPrestashop_Core_Localization_Currency_Middleware_ReferenceService($container)));

        return $instance;
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.middleware.installed' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyInstalled
     */
    protected static function getPrestashop_Core_Localization_Currency_Middleware_InstalledService($container)
    {
        return $container->services['prestashop.core.localization.currency.middleware.installed'] = new \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyInstalled(($container->services['PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider'] ?? self::getCurrencyDataProviderService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.middleware.reference' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyReference
     */
    protected static function getPrestashop_Core_Localization_Currency_Middleware_ReferenceService($container)
    {
        return $container->services['prestashop.core.localization.currency.middleware.reference'] = new \PrestaShop\PrestaShop\Core\Localization\Currency\DataLayer\CurrencyReference(($container->services['prestashop.core.localization.cldr.locale_repository'] ?? self::getPrestashop_Core_Localization_Cldr_LocaleRepositoryService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.currency.repository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Currency\Repository
     */
    protected static function getPrestashop_Core_Localization_Currency_RepositoryService($container)
    {
        return $container->services['prestashop.core.localization.currency.repository'] = new \PrestaShop\PrestaShop\Core\Localization\Currency\Repository(($container->services['prestashop.core.localization.currency.datasource'] ?? self::getPrestashop_Core_Localization_Currency_DatasourceService($container)));
    }

    /**
     * Gets the public 'prestashop.core.localization.locale.context_locale' shared service.
     *
     * @return \PrestaShop\PrestaShop\Core\Localization\Locale
     */
    protected static function getPrestashop_Core_Localization_Locale_ContextLocaleService($container)
    {
        return $container->services['prestashop.core.localization.locale.context_locale'] = ($container->services['PrestaShop\\PrestaShop\\Core\\Localization\\Locale\\Repository'] ?? self::getRepositoryService($container))->getLocale(($container->services['PrestaShop\\PrestaShop\\Adapter\\LegacyContext'] ?? self::getLegacyContextService($container))->getContext()->language->getLocale());
    }

    /**
     * Gets the public 'prestashop.database.naming_strategy' shared service.
     *
     * @return \PrestaShopBundle\Service\Database\DoctrineNamingStrategy
     */
    protected static function getPrestashop_Database_NamingStrategyService($container)
    {
        return $container->services['prestashop.database.naming_strategy'] = new \PrestaShopBundle\Service\Database\DoctrineNamingStrategy(($container->services['annotation_reader'] ??= new \Doctrine\Common\Annotations\AnnotationReader()), 'ps_');
    }

    /**
     * Gets the public 'prestashop.translation.translator_language_loader' shared service.
     *
     * @return \PrestaShopBundle\Translation\TranslatorLanguageLoader
     */
    protected static function getPrestashop_Translation_TranslatorLanguageLoaderService($container)
    {
        return $container->services['prestashop.translation.translator_language_loader'] = new \PrestaShopBundle\Translation\TranslatorLanguageLoader(($container->services['prestashop.adapter.module.repository.module_repository'] ??= new \PrestaShop\PrestaShop\Adapter\Module\Repository\ModuleRepository('/var/www/html', '/var/www/html/modules/')));
    }

    /**
     * Gets the public 'product_comment_criterion_repository' shared service.
     *
     * @return \PrestaShop\Module\ProductComment\Repository\ProductCommentCriterionRepository
     */
    protected static function getProductCommentCriterionRepositoryService($container)
    {
        return $container->services['product_comment_criterion_repository'] = new \PrestaShop\Module\ProductComment\Repository\ProductCommentCriterionRepository(($container->services['doctrine'] ?? self::getDoctrineService($container)), ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), 'ps_');
    }

    /**
     * Gets the public 'product_comment_repository' shared service.
     *
     * @return \PrestaShop\Module\ProductComment\Repository\ProductCommentRepository
     */
    protected static function getProductCommentRepositoryService($container)
    {
        return $container->services['product_comment_repository'] = new \PrestaShop\Module\ProductComment\Repository\ProductCommentRepository(($container->services['doctrine'] ?? self::getDoctrineService($container)), ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), 'ps_', ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration())->get("PRODUCT_COMMENTS_ALLOW_GUESTS"), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration())->get("PRODUCT_COMMENTS_MINIMAL_TIME"));
    }

    /**
     * Gets the private 'PrestaShopBundle\DependencyInjection\RuntimeConstEnvVarProcessor' shared service.
     *
     * @return \PrestaShopBundle\DependencyInjection\RuntimeConstEnvVarProcessor
     */
    protected static function getRuntimeConstEnvVarProcessorService($container)
    {
        return $container->privates['PrestaShopBundle\\DependencyInjection\\RuntimeConstEnvVarProcessor'] = new \PrestaShopBundle\DependencyInjection\RuntimeConstEnvVarProcessor();
    }

    /**
     * Gets the private 'PrestaShopBundle\Entity\Repository\FeatureFlagRepository' shared service.
     *
     * @return \PrestaShopBundle\Entity\Repository\FeatureFlagRepository
     */
    protected static function getFeatureFlagRepositoryService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['PrestaShopBundle\\Entity\\Repository\\FeatureFlagRepository'] = $container->createProxy('FeatureFlagRepositoryProxy1ddab28', static fn () => \FeatureFlagRepositoryProxy1ddab28::createLazyProxy(static fn () => self::getFeatureFlagRepositoryService($container, false)));
        }

        return ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container))->getRepository('PrestaShopBundle\\Entity\\FeatureFlag');
    }

    /**
     * Gets the private 'PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DbLayer' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DbLayer
     */
    protected static function getDbLayerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DbLayer'] = $container->createProxy('DbLayerGhostB471b8b', static fn () => \DbLayerGhostB471b8b::createLazyGhost(static fn ($proxy) => self::getDbLayerService($container, $proxy)));
        }

        return ($lazyLoad->__construct(($container->privates['PrestaShopBundle\\Entity\\Repository\\FeatureFlagRepository'] ?? self::getFeatureFlagRepositoryService($container))) && false ?: $lazyLoad);
    }

    /**
     * Gets the private 'PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DotEnvLayer' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DotEnvLayer
     */
    protected static function getDotEnvLayerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\DotEnvLayer'] = $container->createProxy('DotEnvLayerGhost71d5ebb', static fn () => \DotEnvLayerGhost71d5ebb::createLazyGhost(static fn ($proxy) => self::getDotEnvLayerService($container, $proxy)));
        }

        return ($lazyLoad->__construct(($container->services['prestashop.adapter.environment'] ??= new \PrestaShop\PrestaShop\Adapter\Environment(false, 'prod', 'front')), '/var/www/html') && false ?: $lazyLoad);
    }

    /**
     * Gets the private 'PrestaShop\PrestaShop\Core\FeatureFlag\Layer\EnvLayer' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\EnvLayer
     */
    protected static function getEnvLayerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\EnvLayer'] = $container->createProxy('EnvLayerGhostEdbcd0e', static fn () => \EnvLayerGhostEdbcd0e::createLazyGhost(static fn ($proxy) => self::getEnvLayerService($container, $proxy)));
        }

        return $lazyLoad;
    }

    /**
     * Gets the private 'PrestaShop\PrestaShop\Core\FeatureFlag\Layer\QueryLayer' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\QueryLayer
     */
    protected static function getQueryLayerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['PrestaShop\\PrestaShop\\Core\\FeatureFlag\\Layer\\QueryLayer'] = $container->createProxy('QueryLayerGhostEa7d94d', static fn () => \QueryLayerGhostEa7d94d::createLazyGhost(static fn ($proxy) => self::getQueryLayerService($container, $proxy)));
        }

        return ($lazyLoad->__construct(($container->services['prestashop.adapter.environment'] ??= new \PrestaShop\PrestaShop\Adapter\Environment(false, 'prod', 'front')), ($container->services['Symfony\\Component\\HttpFoundation\\RequestStack'] ?? self::getRequestStackService($container))) && false ?: $lazyLoad);
    }

    /**
     * Gets the public 'prestashop.adapter.tools' alias.
     *
     * @return object The "PrestaShop\PrestaShop\Adapter\Tools" service.
     */
    protected static function getPrestashop_Adapter_ToolsService($container)
    {
        trigger_deprecation('PrestaShop\\PrestaShop', '8.1', 'The "prestashop.adapter.tools" service alias is deprecated. You should stop using it, as it will be removed in the future.');

        return $container->get('PrestaShop\\PrestaShop\\Adapter\\Tools');
    }

    public function getParameter(string $name): array|bool|string|int|float|\UnitEnum|null
    {
        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new ParameterNotFoundException($name);
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (!isset($this->parameterBag)) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        throw new ParameterNotFoundException($name);
    }

    protected function getDefaultParameters(): array
    {
        return [
            'database_host' => 'db',
            'database_port' => '',
            'database_name' => 'prestashop',
            'database_user' => 'prestashopuser',
            'database_password' => 'prestashoppassword',
            'database_prefix' => 'ps_',
            'database_engine' => 'InnoDB',
            'mailer_transport' => 'smtp',
            'mailer_host' => '127.0.0.1',
            'mailer_user' => NULL,
            'mailer_password' => NULL,
            'secret' => 'jxJ7DBh6XqVnAJ5R43D8GHNKAWkX8Thd0I3qwm3wFOoxk18kp2mYsXqvqbmaSQMk',
            'ps_caching' => 'CacheMemcache',
            'ps_cache_enable' => false,
            'ps_creation_date' => '2024-06-12',
            'locale' => 'es-ES',
            'cookie_key' => 'stI2AkApLnErV81VHFnDtfKiGcf5jNCLj2VQinm8aeLXfny8B8c5gLN6GbpRnL84',
            'cookie_iv' => 'KV3fYz8vqYjigpm5oCWfct7GSXcRzIQh',
            'use_debug_toolbar' => true,
            'new_cookie_key' => 'def000002b7e82fe5288a7da9567860c55c59350c29e835cb1aaac8f39e43bd20091a9f4c8823031aa8fa2d190b2544c9b99a534b716e8a1815d7575ebefd2173c6f8488',
            'api_public_key' => '-----BEGIN PUBLIC KEY-----'."\n".'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs5MjpudKjk9bMmYE9G+X'."\n".'1xBOdG5upwu400dPOXISb5TF39vYtuKrxbsfl1Mb6+tQ2/OtWKLC7UgvZHI+yPm2'."\n".'gShwkTjPYj9fzn9106n6hQZUpIjkwSN2Exwx4klz+4YNCkBoW7g/vsldGO2oDmJl'."\n".'L3u72bR9jBjPGd293mNNy1xWgX/PnmV/mlNpf2LEb+yBlpbVfR91DJyEYyz+8Gdc'."\n".'S+KMR+eWDq/Is7ichpHvAUeF0nTV8H8ESmmSWPBtCbp493NBq+1uf1CkmZWx6DBg'."\n".'bO0lbINKWCIIvwyjMNUZTpDJYZTPeUwt+Rm85d2W42d0Ks2WMh02OJc8kWF2qV4A'."\n".'+wIDAQAB'."\n".'-----END PUBLIC KEY-----'."\n".'',
            'api_private_key' => '-----BEGIN PRIVATE KEY-----'."\n".'MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCzkyOm50qOT1sy'."\n".'ZgT0b5fXEE50bm6nC7jTR085chJvlMXf29i24qvFux+XUxvr61Db861YosLtSC9k'."\n".'cj7I+baBKHCROM9iP1/Of3XTqfqFBlSkiOTBI3YTHDHiSXP7hg0KQGhbuD++yV0Y'."\n".'7agOYmUve7vZtH2MGM8Z3b3eY03LXFaBf8+eZX+aU2l/YsRv7IGWltV9H3UMnIRj'."\n".'LP7wZ1xL4oxH55YOr8izuJyGke8BR4XSdNXwfwRKaZJY8G0Junj3c0Gr7W5/UKSZ'."\n".'lbHoMGBs7SVsg0pYIgi/DKMw1RlOkMlhlM95TC35Gbzl3ZbjZ3QqzZYyHTY4lzyR'."\n".'YXapXgD7AgMBAAECggEAQbR/UYUEgyCnKkAo5PVl9fOJ+VEk3KtN08SeSNMjyr8B'."\n".'TeEHoRc8KavHqdtndoGSAwDctvdK4n5MlPC2Z1vzOrv8wC4st3Kf0BNUHf/uYbkI'."\n".'xHEwXjjm7aQd3oHo1andYJhjdtfqPxk3nrTqjmTTSDX6bHR9kYLMWFcJr3LfVp5T'."\n".'ijGVbNFrEVIB2PJ61vhRuiLjsAkLzhwgHSsLrgxaqAVK6qTIegAOD9ZEfrwLJXFl'."\n".'iavF2zh313+6KS2lwVoDLske2C1vOh/492ETRXYmBd2JQ2vUpKzWGA0Hm6/XNN2D'."\n".'u9u63A8DqC2s32eMAW/hW7HEFmLVN7ZhW5HLqStXZQKBgQDsAhdSOI/P3sWVwaJ0'."\n".'t9KZElEGUpqvP8c2GiMzTCqMM3B/XzYwVbBXyPJk6/T1y1Gfe6S94bpYNo4sxFvt'."\n".'fiIDrRKrpzaaPjGSMz95evtNMqfNsq+/vcID+fddw2bo8PbmgBVLBLdG0a6xX0C/'."\n".'Pfbn+Lk9XcvydXIOVH7lBpmpRQKBgQDCyUXJdADOovCwPUfZHfZnYgNKUUIx3/GR'."\n".'S0in96hj/Q1PHZLFx8R2SGcaY7/5rj/fWz7OkixLyEbtTB1pGXaUBIGhqvh1o7yf'."\n".'x+Ar2v96PPXlvw50flBhjedqwMbeVKhkwiuf7+eChv1UVXZTOVZ9f+Y4ILg0cSoy'."\n".'joVo1rMFPwKBgBRdTdPba5VdPKFidvkpT3PD39fy0sQidbcWZEkt3lIAsklbVtqu'."\n".'2iuI/Fl2/skixSVEzv9PdfvcoUH9o40HoDm++mhzYkPG8BIUd/qsgPi1UUNvkrix'."\n".'0Ab1z8F4de3NtRBIpw21F3d16mQFuxmFaEO18433BP0j4zaXVee/PQ0dAoGAKqXA'."\n".'1tvENXntctjn+zyZL4eBKuthr+PVUzeFf+k0gDfuiwzxjsYvWKp/kIKYjMU/DNtA'."\n".'hB/y/OCrztbkdZdyo/PcohX58l/YM6+igFehqhTgzd2n/4+Mb9+O9IuivxkQCYeN'."\n".'36W6LZT6sFVJ4+zg5/dx44YebrT8RTd5NDwV1CcCgYEAzserEi9ZSzlOd3A84Jbg'."\n".'QIuGWVe4aNaX59FaVPi4sV1Qy2ZbB+o+hWg2pAh3Wp175KXTYSJ8E0B5E3eDuZpq'."\n".'RurCkpxr7OL6HqSe+Rg4GkF0ABTlT9aUB1wKHxdBx/lkknpqKu7obvikhimuWwX5'."\n".'o0rkl9oTBJbo7QqRQJOVUj0='."\n".'-----END PRIVATE KEY-----'."\n".'',
            'cache.driver' => 'array',
            'cache.adapter' => 'cache.adapter.array',
            'kernel.bundles' => [

            ],
            'kernel.name' => 'app',
            'kernel.debug' => false,
            'kernel.environment' => 'prod',
            'kernel.app_id' => 'front',
            'kernel.cache_dir' => '/var/www/html/var/cache/prod/',
            'kernel.active_modules' => [
                0 => 'ps_emailalerts',
                1 => 'ps_brandlist',
                2 => 'ps_socialfollow',
                3 => 'blockreassurance',
                4 => 'ps_banner',
                5 => 'statsdata',
                6 => 'statssales',
                7 => 'ps_newproducts',
                8 => 'statscheckup',
                9 => 'statscarrier',
                10 => 'ps_imageslider',
                11 => 'ps_viewedproduct',
                12 => 'statsbestvouchers',
                13 => 'ps_bestsellers',
                14 => 'dashactivity',
                15 => 'statsregistrations',
                16 => 'statspersonalinfos',
                17 => 'ps_shoppingcart',
                18 => 'pagesnotfound',
                19 => 'statsforecast',
                20 => 'ps_wirepayment',
                21 => 'contactform',
                22 => 'ps_mainmenu',
                23 => 'productcomments',
                24 => 'statsproduct',
                25 => 'ps_crossselling',
                26 => 'ps_linklist',
                27 => 'ps_categoryproducts',
                28 => 'ps_supplierlist',
                29 => 'ps_currencyselector',
                30 => 'ps_contactinfo',
                31 => 'statsbestcustomers',
                32 => 'gsitemap',
                33 => 'gridhtml',
                34 => 'ps_specials',
                35 => 'ps_languageselector',
                36 => 'ps_themecusto',
                37 => 'statsstock',
                38 => 'ps_dataprivacy',
                39 => 'statsbestproducts',
                40 => 'statsbestmanufacturers',
                41 => 'statscatalog',
                42 => 'ps_sharebuttons',
                43 => 'ps_distributionapiclient',
                44 => 'statsbestsuppliers',
                45 => 'ps_faviconnotificationbo',
                46 => 'dashgoals',
                47 => 'blockwishlist',
                48 => 'ps_customtext',
                49 => 'dashproducts',
                50 => 'ps_customeraccountlinks',
                51 => 'ps_checkpayment',
                52 => 'ps_customersignin',
                53 => 'psgdpr',
                54 => 'ps_facetedsearch',
                55 => 'ps_searchbar',
                56 => 'ps_featuredproducts',
                57 => 'ps_googleanalytics',
                58 => 'ps_apiresources',
                59 => 'statsnewsletter',
                60 => 'ps_categorytree',
                61 => 'statsbestcategories',
                62 => 'graphnvd3',
                63 => 'ps_cashondelivery',
                64 => 'statssearch',
                65 => 'dashtrends',
                66 => 'ps_emailsubscription',
            ],
            'prestashop.active_modules' => [
                0 => 'ps_emailalerts',
                1 => 'ps_brandlist',
                2 => 'ps_socialfollow',
                3 => 'blockreassurance',
                4 => 'ps_banner',
                5 => 'statsdata',
                6 => 'statssales',
                7 => 'ps_newproducts',
                8 => 'statscheckup',
                9 => 'statscarrier',
                10 => 'ps_imageslider',
                11 => 'ps_viewedproduct',
                12 => 'statsbestvouchers',
                13 => 'ps_bestsellers',
                14 => 'dashactivity',
                15 => 'statsregistrations',
                16 => 'statspersonalinfos',
                17 => 'ps_shoppingcart',
                18 => 'pagesnotfound',
                19 => 'statsforecast',
                20 => 'ps_wirepayment',
                21 => 'contactform',
                22 => 'ps_mainmenu',
                23 => 'productcomments',
                24 => 'statsproduct',
                25 => 'ps_crossselling',
                26 => 'ps_linklist',
                27 => 'ps_categoryproducts',
                28 => 'ps_supplierlist',
                29 => 'ps_currencyselector',
                30 => 'ps_contactinfo',
                31 => 'statsbestcustomers',
                32 => 'gsitemap',
                33 => 'gridhtml',
                34 => 'ps_specials',
                35 => 'ps_languageselector',
                36 => 'ps_themecusto',
                37 => 'statsstock',
                38 => 'ps_dataprivacy',
                39 => 'statsbestproducts',
                40 => 'statsbestmanufacturers',
                41 => 'statscatalog',
                42 => 'ps_sharebuttons',
                43 => 'ps_distributionapiclient',
                44 => 'statsbestsuppliers',
                45 => 'ps_faviconnotificationbo',
                46 => 'dashgoals',
                47 => 'blockwishlist',
                48 => 'ps_customtext',
                49 => 'dashproducts',
                50 => 'ps_customeraccountlinks',
                51 => 'ps_checkpayment',
                52 => 'ps_customersignin',
                53 => 'psgdpr',
                54 => 'ps_facetedsearch',
                55 => 'ps_searchbar',
                56 => 'ps_featuredproducts',
                57 => 'ps_googleanalytics',
                58 => 'ps_apiresources',
                59 => 'statsnewsletter',
                60 => 'ps_categorytree',
                61 => 'statsbestcategories',
                62 => 'graphnvd3',
                63 => 'ps_cashondelivery',
                64 => 'statssearch',
                65 => 'dashtrends',
                66 => 'ps_emailsubscription',
            ],
            'prestashop.installed_modules' => [
                0 => 'ps_emailalerts',
                1 => 'ps_brandlist',
                2 => 'ps_socialfollow',
                3 => 'blockreassurance',
                4 => 'ps_banner',
                5 => 'statsdata',
                6 => 'statssales',
                7 => 'ps_newproducts',
                8 => 'statscheckup',
                9 => 'statscarrier',
                10 => 'ps_imageslider',
                11 => 'ps_viewedproduct',
                12 => 'statsbestvouchers',
                13 => 'ps_bestsellers',
                14 => 'dashactivity',
                15 => 'statsregistrations',
                16 => 'statspersonalinfos',
                17 => 'ps_shoppingcart',
                18 => 'pagesnotfound',
                19 => 'statsforecast',
                20 => 'ps_wirepayment',
                21 => 'contactform',
                22 => 'ps_mainmenu',
                23 => 'productcomments',
                24 => 'statsproduct',
                25 => 'ps_crossselling',
                26 => 'ps_linklist',
                27 => 'ps_categoryproducts',
                28 => 'ps_supplierlist',
                29 => 'ps_currencyselector',
                30 => 'ps_contactinfo',
                31 => 'statsbestcustomers',
                32 => 'gsitemap',
                33 => 'gridhtml',
                34 => 'ps_specials',
                35 => 'ps_languageselector',
                36 => 'ps_themecusto',
                37 => 'statsstock',
                38 => 'ps_dataprivacy',
                39 => 'statsbestproducts',
                40 => 'statsbestmanufacturers',
                41 => 'statscatalog',
                42 => 'ps_sharebuttons',
                43 => 'ps_distributionapiclient',
                44 => 'statsbestsuppliers',
                45 => 'ps_faviconnotificationbo',
                46 => 'dashgoals',
                47 => 'blockwishlist',
                48 => 'ps_customtext',
                49 => 'dashproducts',
                50 => 'ps_customeraccountlinks',
                51 => 'ps_checkpayment',
                52 => 'ps_customersignin',
                53 => 'psgdpr',
                54 => 'ps_facetedsearch',
                55 => 'ps_searchbar',
                56 => 'ps_featuredproducts',
                57 => 'ps_googleanalytics',
                58 => 'ps_apiresources',
                59 => 'statsnewsletter',
                60 => 'ps_categorytree',
                61 => 'statsbestcategories',
                62 => 'graphnvd3',
                63 => 'ps_cashondelivery',
                64 => 'statssearch',
                65 => 'dashtrends',
                66 => 'ps_emailsubscription',
            ],
            'prestashop.module_dir' => '/var/www/html/modules/',
            'kernel.project_dir' => '/var/www/html',
            'ps_cache_dir' => '/var/www/html/var/cache/prod/',
            'mail_themes_uri' => '/mails/themes',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => [
                'default' => 'doctrine.orm.default_entity_manager',
            ],
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => [

            ],
            'doctrine.connections' => [
                'default' => 'doctrine.dbal.default_connection',
            ],
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.metadata.attribute.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AttributeDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => false,
            'doctrine.orm.proxy_dir' => '/var/www/html/var/cache/prod//doctrine/orm/Proxies',
            'doctrine.orm.proxy_namespace' => 'Proxies',
        ];
    }
}

class FeatureFlagRepositoryProxy1ddab28 extends \PrestaShopBundle\Entity\Repository\FeatureFlagRepository implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyProxyTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".'*'."\0".'_class' => [parent::class, '_class', null],
        "\0".'*'."\0".'_em' => [parent::class, '_em', null],
        "\0".'*'."\0".'_entityName' => [parent::class, '_entityName', null],
        '_class' => [parent::class, '_class', null],
        '_em' => [parent::class, '_em', null],
        '_entityName' => [parent::class, '_entityName', null],
    ];

    public function getByName(string $featureFlagName): ?\PrestaShopBundle\Entity\FeatureFlag
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->getByName(...\func_get_args());
        }

        return parent::getByName(...\func_get_args());
    }

    public function isEnabled(string $featureFlagName): bool
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->isEnabled(...\func_get_args());
        }

        return parent::isEnabled(...\func_get_args());
    }

    public function isDisabled(string $featureFlagName): bool
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->isDisabled(...\func_get_args());
        }

        return parent::isDisabled(...\func_get_args());
    }

    public function enable(string $featureFlagName): void
    {
        if (isset($this->lazyObjectState)) {
            ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->enable(...\func_get_args());
        } else {
            parent::enable(...\func_get_args());
        }
    }

    public function disable(string $featureFlagName): void
    {
        if (isset($this->lazyObjectState)) {
            ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->disable(...\func_get_args());
        } else {
            parent::disable(...\func_get_args());
        }
    }
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class LegacyAdminTokenValidatorGhost2817cf2 extends \PrestaShopBundle\Security\Admin\LegacyAdminTokenValidator implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'employeeRepository' => [parent::class, 'employeeRepository', parent::class],
        "\0".parent::class."\0".'requestStack' => [parent::class, 'requestStack', parent::class],
        'employeeRepository' => [parent::class, 'employeeRepository', parent::class],
        'requestStack' => [parent::class, 'requestStack', parent::class],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class FeatureFlagManagerGhost61268b3 extends \PrestaShop\PrestaShop\Core\FeatureFlag\FeatureFlagManager implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'featureFlagRepository' => [parent::class, 'featureFlagRepository', parent::class],
        "\0".parent::class."\0".'featureFlagStates' => [parent::class, 'featureFlagStates', null],
        "\0".parent::class."\0".'locator' => [parent::class, 'locator', parent::class],
        'featureFlagRepository' => [parent::class, 'featureFlagRepository', parent::class],
        'featureFlagStates' => [parent::class, 'featureFlagStates', null],
        'locator' => [parent::class, 'locator', parent::class],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class DbLayerGhostB471b8b extends \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DbLayer implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".'*'."\0".'featureFlagRepository' => [parent::class, 'featureFlagRepository', parent::class],
        'featureFlagRepository' => [parent::class, 'featureFlagRepository', parent::class],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class DotEnvLayerGhost71d5ebb extends \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\DotEnvLayer implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'environment' => [parent::class, 'environment', null],
        "\0".parent::class."\0".'rootDir' => [parent::class, 'rootDir', null],
        'environment' => [parent::class, 'environment', null],
        'rootDir' => [parent::class, 'rootDir', null],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class EnvLayerGhostEdbcd0e extends \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\EnvLayer implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class QueryLayerGhostEa7d94d extends \PrestaShop\PrestaShop\Core\FeatureFlag\Layer\QueryLayer implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyGhostTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'environment' => [parent::class, 'environment', null],
        "\0".parent::class."\0".'requestStack' => [parent::class, 'requestStack', null],
        'environment' => [parent::class, 'environment', null],
        'requestStack' => [parent::class, 'requestStack', null],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class RequestStackProxyA9608a6 extends \Symfony\Component\HttpFoundation\RequestStack implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyProxyTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'requests' => [parent::class, 'requests', null],
        'requests' => [parent::class, 'requests', null],
    ];

    public function pop(): ?\Symfony\Component\HttpFoundation\Request
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->pop(...\func_get_args());
        }

        return parent::pop(...\func_get_args());
    }

    public function getCurrentRequest(): ?\Symfony\Component\HttpFoundation\Request
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->getCurrentRequest(...\func_get_args());
        }

        return parent::getCurrentRequest(...\func_get_args());
    }

    public function getMainRequest(): ?\Symfony\Component\HttpFoundation\Request
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->getMainRequest(...\func_get_args());
        }

        return parent::getMainRequest(...\func_get_args());
    }

    public function getParentRequest(): ?\Symfony\Component\HttpFoundation\Request
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->getParentRequest(...\func_get_args());
        }

        return parent::getParentRequest(...\func_get_args());
    }

    public function getSession(): \Symfony\Component\HttpFoundation\Session\SessionInterface
    {
        if (isset($this->lazyObjectState)) {
            return ($this->lazyObjectState->realInstance ??= ($this->lazyObjectState->initializer)())->getSession(...\func_get_args());
        }

        return parent::getSession(...\func_get_args());
    }
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);

class EntityManagerProxyCaac541 extends \Doctrine\ORM\EntityManager implements \Symfony\Component\VarExporter\LazyObjectInterface
{
    use \Symfony\Component\VarExporter\LazyProxyTrait;

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'cache' => [parent::class, 'cache', null],
        "\0".parent::class."\0".'closed' => [parent::class, 'closed', null],
        "\0".parent::class."\0".'config' => [parent::class, 'config', null],
        "\0".parent::class."\0".'conn' => [parent::class, 'conn', null],
        "\0".parent::class."\0".'eventManager' => [parent::class, 'eventManager', null],
        "\0".parent::class."\0".'expressionBuilder' => [parent::class, 'expressionBuilder', null],
        "\0".parent::class."\0".'filterCollection' => [parent::class, 'filterCollection', null],
        "\0".parent::class."\0".'metadataFactory' => [parent::class, 'metadataFactory', null],
        "\0".parent::class."\0".'proxyFactory' => [parent::class, 'proxyFactory', null],
        "\0".parent::class."\0".'repositoryFactory' => [parent::class, 'repositoryFactory', null],
        "\0".parent::class."\0".'unitOfWork' => [parent::class, 'unitOfWork', null],
        'cache' => [parent::class, 'cache', null],
        'closed' => [parent::class, 'closed', null],
        'config' => [parent::class, 'config', null],
        'conn' => [parent::class, 'conn', null],
        'eventManager' => [parent::class, 'eventManager', null],
        'expressionBuilder' => [parent::class, 'expressionBuilder', null],
        'filterCollection' => [parent::class, 'filterCollection', null],
        'metadataFactory' => [parent::class, 'metadataFactory', null],
        'proxyFactory' => [parent::class, 'proxyFactory', null],
        'repositoryFactory' => [parent::class, 'repositoryFactory', null],
        'unitOfWork' => [parent::class, 'unitOfWork', null],
    ];
}

// Help opcache.preload discover always-needed symbols
class_exists(\Symfony\Component\VarExporter\Internal\Hydrator::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectRegistry::class);
class_exists(\Symfony\Component\VarExporter\Internal\LazyObjectState::class);
